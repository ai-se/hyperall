{"data": [[[1, "{\"task_id\": \"digits\"}", 0], [0.11262798634812288, 4.253926992416382, {"__enum__": "StatusType.SUCCESS"}, {"duration": 4.1927690505981445, "num_run": 2, "configuration_origin": "Initial design"}]], [[2, "{\"task_id\": \"digits\"}", 0], [0.14675767918088733, 5.163858890533447, {"__enum__": "StatusType.SUCCESS"}, {"duration": 5.100100994110107, "num_run": 3, "configuration_origin": "Initial design"}]], [[3, "{\"task_id\": \"digits\"}", 0], [0.2662116040955631, 4.748629093170166, {"__enum__": "StatusType.SUCCESS"}, {"duration": 4.683048963546753, "num_run": 4, "configuration_origin": "Initial design"}]], [[4, "{\"task_id\": \"digits\"}", 0], [1.0, 0.9696309566497803, {"__enum__": "StatusType.CRASHED"}, {"error": "Result queue is empty", "configuration_origin": "Initial design"}]], [[5, "{\"task_id\": \"digits\"}", 0], [0.0921501706484642, 6.173014163970947, {"__enum__": "StatusType.SUCCESS"}, {"duration": 6.116672039031982, "num_run": 6, "configuration_origin": "Initial design"}]], [[6, "{\"task_id\": \"digits\"}", 0], [0.1774744027303754, 5.684390068054199, {"__enum__": "StatusType.SUCCESS"}, {"duration": 5.613343000411987, "num_run": 7, "configuration_origin": "Initial design"}]], [[7, "{\"task_id\": \"digits\"}", 0], [1.0, 1.0921111106872559, {"__enum__": "StatusType.CRASHED"}, {"error": "Result queue is empty", "configuration_origin": "Initial design"}]], [[8, "{\"task_id\": \"digits\"}", 0], [0.12286689419795227, 4.267841815948486, {"__enum__": "StatusType.SUCCESS"}, {"duration": 4.170408248901367, "num_run": 9, "configuration_origin": "Initial design"}]], [[9, "{\"task_id\": \"digits\"}", 0], [0.15699658703071673, 5.242464065551758, {"__enum__": "StatusType.SUCCESS"}, {"duration": 5.16587495803833, "num_run": 10, "configuration_origin": "Initial design"}]], [[10, "{\"task_id\": \"digits\"}", 0], [1.0, 1.187352180480957, {"__enum__": "StatusType.CRASHED"}, {"traceback": "Traceback (most recent call last):\n  File \"/Users/viveknair/virtualenvironment/autosklearn/lib/python3.6/site-packages/autosklearn/evaluation/__init__.py\", line 25, in fit_predict_try_except_decorator\n    return ta(queue=queue, **kwargs)\n  File \"/Users/viveknair/virtualenvironment/autosklearn/lib/python3.6/site-packages/autosklearn/evaluation/train_evaluator.py\", line 595, in eval_cv\n    evaluator.fit_predict_and_loss()\n  File \"/Users/viveknair/virtualenvironment/autosklearn/lib/python3.6/site-packages/autosklearn/evaluation/train_evaluator.py\", line 105, in fit_predict_and_loss\n    i, train_indices=train_split, test_indices=test_split\n  File \"/Users/viveknair/virtualenvironment/autosklearn/lib/python3.6/site-packages/autosklearn/evaluation/train_evaluator.py\", line 288, in _partial_fit_and_predict\n    self.Y_train[train_indices])\n  File \"/Users/viveknair/virtualenvironment/autosklearn/lib/python3.6/site-packages/autosklearn/evaluation/abstract_evaluator.py\", line 372, in _fit_and_suppress_warnings\n    model.fit(X, y)\n  File \"/Users/viveknair/virtualenvironment/autosklearn/lib/python3.6/site-packages/autosklearn/pipeline/base.py\", line 93, in fit\n    self.fit_estimator(X, y, **fit_params)\n  File \"/Users/viveknair/virtualenvironment/autosklearn/lib/python3.6/site-packages/autosklearn/pipeline/base.py\", line 110, in fit_estimator\n    self._final_estimator.fit(X, y, **fit_params)\n  File \"/Users/viveknair/virtualenvironment/autosklearn/lib/python3.6/site-packages/autosklearn/pipeline/components/base.py\", line 380, in fit\n    return self.choice.fit(X, y, **kwargs)\n  File \"/Users/viveknair/virtualenvironment/autosklearn/lib/python3.6/site-packages/autosklearn/pipeline/components/classification/libsvm_svc.py\", line 75, in fit\n    self.estimator.fit(X, Y)\n  File \"/Users/viveknair/virtualenvironment/autosklearn/lib/python3.6/site-packages/sklearn/svm/base.py\", line 187, in fit\n    fit(X, y, sample_weight, solver_type, kernel, random_seed=seed)\n  File \"/Users/viveknair/virtualenvironment/autosklearn/lib/python3.6/site-packages/sklearn/svm/base.py\", line 254, in _dense_fit\n    max_iter=self.max_iter, random_seed=random_seed)\n  File \"sklearn/svm/libsvm.pyx\", line 187, in sklearn.svm.libsvm.fit\nValueError: cache_size <= 0\n", "error": "ValueError('cache_size <= 0',)", "configuration_origin": "Random Search (sorted)"}]], [[11, "{\"task_id\": \"digits\"}", 0], [1.0, 1.6518747806549072, {"__enum__": "StatusType.CRASHED"}, {"error": "Result queue is empty", "configuration_origin": "Random Search"}]], [[12, "{\"task_id\": \"digits\"}", 0], [0.09556313993174059, 5.339244842529297, {"__enum__": "StatusType.SUCCESS"}, {"duration": 5.27547812461853, "num_run": 13, "configuration_origin": "Random Search (sorted)"}]], [[13, "{\"task_id\": \"digits\"}", 0], [1.0, 1.4281539916992188, {"__enum__": "StatusType.CRASHED"}, {"error": "Result queue is empty", "configuration_origin": "Random Search"}]]], "configs": {"1": {"balancing:strategy": "none", "categorical_encoding:__choice__": "one_hot_encoding", "classifier:__choice__": "random_forest", "imputation:strategy": "mean", "preprocessor:__choice__": "no_preprocessing", "rescaling:__choice__": "standardize", "categorical_encoding:one_hot_encoding:use_minimum_fraction": "True", "classifier:random_forest:bootstrap": "True", "classifier:random_forest:criterion": "gini", "classifier:random_forest:max_depth": "None", "classifier:random_forest:max_features": 0.5, "classifier:random_forest:max_leaf_nodes": "None", "classifier:random_forest:min_impurity_decrease": 0.0, "classifier:random_forest:min_samples_leaf": 1, "classifier:random_forest:min_samples_split": 2, "classifier:random_forest:min_weight_fraction_leaf": 0.0, "classifier:random_forest:n_estimators": 100, "categorical_encoding:one_hot_encoding:minimum_fraction": 0.01}, "2": {"balancing:strategy": "weighting", "categorical_encoding:__choice__": "one_hot_encoding", "classifier:__choice__": "extra_trees", "imputation:strategy": "mean", "preprocessor:__choice__": "feature_agglomeration", "rescaling:__choice__": "minmax", "categorical_encoding:one_hot_encoding:use_minimum_fraction": "True", "classifier:extra_trees:bootstrap": "False", "classifier:extra_trees:criterion": "gini", "classifier:extra_trees:max_depth": "None", "classifier:extra_trees:max_features": 0.9094110110427254, "classifier:extra_trees:max_leaf_nodes": "None", "classifier:extra_trees:min_impurity_decrease": 0.0, "classifier:extra_trees:min_samples_leaf": 7, "classifier:extra_trees:min_samples_split": 12, "classifier:extra_trees:min_weight_fraction_leaf": 0.0, "classifier:extra_trees:n_estimators": 100, "preprocessor:feature_agglomeration:affinity": "manhattan", "preprocessor:feature_agglomeration:linkage": "complete", "preprocessor:feature_agglomeration:n_clusters": 195, "preprocessor:feature_agglomeration:pooling_func": "mean", "categorical_encoding:one_hot_encoding:minimum_fraction": 0.18137532678800652}, "3": {"balancing:strategy": "weighting", "categorical_encoding:__choice__": "no_encoding", "classifier:__choice__": "decision_tree", "imputation:strategy": "median", "preprocessor:__choice__": "no_preprocessing", "rescaling:__choice__": "minmax", "classifier:decision_tree:criterion": "entropy", "classifier:decision_tree:max_depth": 0.24229264852063404, "classifier:decision_tree:max_features": 1.0, "classifier:decision_tree:max_leaf_nodes": "None", "classifier:decision_tree:min_impurity_decrease": 0.0, "classifier:decision_tree:min_samples_leaf": 15, "classifier:decision_tree:min_samples_split": 9, "classifier:decision_tree:min_weight_fraction_leaf": 0.0}, "4": {"balancing:strategy": "none", "categorical_encoding:__choice__": "one_hot_encoding", "classifier:__choice__": "gradient_boosting", "imputation:strategy": "mean", "preprocessor:__choice__": "fast_ica", "rescaling:__choice__": "standardize", "categorical_encoding:one_hot_encoding:use_minimum_fraction": "False", "classifier:gradient_boosting:criterion": "mse", "classifier:gradient_boosting:learning_rate": 0.2155613360930585, "classifier:gradient_boosting:loss": "deviance", "classifier:gradient_boosting:max_depth": 4, "classifier:gradient_boosting:max_features": 0.31988031161984326, "classifier:gradient_boosting:max_leaf_nodes": "None", "classifier:gradient_boosting:min_impurity_decrease": 0.0, "classifier:gradient_boosting:min_samples_leaf": 8, "classifier:gradient_boosting:min_samples_split": 13, "classifier:gradient_boosting:min_weight_fraction_leaf": 0.0, "classifier:gradient_boosting:n_estimators": 275, "classifier:gradient_boosting:subsample": 0.28870176110739404, "preprocessor:fast_ica:algorithm": "parallel", "preprocessor:fast_ica:fun": "logcosh", "preprocessor:fast_ica:whiten": "False"}, "5": {"balancing:strategy": "weighting", "categorical_encoding:__choice__": "one_hot_encoding", "classifier:__choice__": "gradient_boosting", "imputation:strategy": "mean", "preprocessor:__choice__": "no_preprocessing", "rescaling:__choice__": "standardize", "categorical_encoding:one_hot_encoding:use_minimum_fraction": "True", "classifier:gradient_boosting:criterion": "mse", "classifier:gradient_boosting:learning_rate": 0.051832615669195795, "classifier:gradient_boosting:loss": "deviance", "classifier:gradient_boosting:max_depth": 6, "classifier:gradient_boosting:max_features": 0.8807456180216267, "classifier:gradient_boosting:max_leaf_nodes": "None", "classifier:gradient_boosting:min_impurity_decrease": 0.0, "classifier:gradient_boosting:min_samples_leaf": 7, "classifier:gradient_boosting:min_samples_split": 19, "classifier:gradient_boosting:min_weight_fraction_leaf": 0.0, "classifier:gradient_boosting:n_estimators": 366, "classifier:gradient_boosting:subsample": 0.7314831276137047, "categorical_encoding:one_hot_encoding:minimum_fraction": 0.010000000000000004}, "6": {"balancing:strategy": "weighting", "categorical_encoding:__choice__": "one_hot_encoding", "classifier:__choice__": "random_forest", "imputation:strategy": "mean", "preprocessor:__choice__": "liblinear_svc_preprocessor", "rescaling:__choice__": "standardize", "categorical_encoding:one_hot_encoding:use_minimum_fraction": "True", "classifier:random_forest:bootstrap": "False", "classifier:random_forest:criterion": "gini", "classifier:random_forest:max_depth": "None", "classifier:random_forest:max_features": 0.7983157215145903, "classifier:random_forest:max_leaf_nodes": "None", "classifier:random_forest:min_impurity_decrease": 0.0, "classifier:random_forest:min_samples_leaf": 4, "classifier:random_forest:min_samples_split": 15, "classifier:random_forest:min_weight_fraction_leaf": 0.0, "classifier:random_forest:n_estimators": 100, "preprocessor:liblinear_svc_preprocessor:C": 0.4971515945303584, "preprocessor:liblinear_svc_preprocessor:dual": "False", "preprocessor:liblinear_svc_preprocessor:fit_intercept": "True", "preprocessor:liblinear_svc_preprocessor:intercept_scaling": 1, "preprocessor:liblinear_svc_preprocessor:loss": "squared_hinge", "preprocessor:liblinear_svc_preprocessor:multi_class": "ovr", "preprocessor:liblinear_svc_preprocessor:penalty": "l1", "preprocessor:liblinear_svc_preprocessor:tol": 0.00010268311046018636, "categorical_encoding:one_hot_encoding:minimum_fraction": 0.001856820833094005}, "7": {"balancing:strategy": "none", "categorical_encoding:__choice__": "one_hot_encoding", "classifier:__choice__": "libsvm_svc", "imputation:strategy": "mean", "preprocessor:__choice__": "kernel_pca", "rescaling:__choice__": "normalize", "categorical_encoding:one_hot_encoding:use_minimum_fraction": "False", "classifier:libsvm_svc:C": 82.27108214899228, "classifier:libsvm_svc:gamma": 0.934840932693321, "classifier:libsvm_svc:kernel": "rbf", "classifier:libsvm_svc:max_iter": -1, "classifier:libsvm_svc:shrinking": "False", "classifier:libsvm_svc:tol": 0.00090919103756734, "preprocessor:kernel_pca:kernel": "cosine", "preprocessor:kernel_pca:n_components": 1754}, "8": {"balancing:strategy": "none", "categorical_encoding:__choice__": "no_encoding", "classifier:__choice__": "k_nearest_neighbors", "imputation:strategy": "mean", "preprocessor:__choice__": "no_preprocessing", "rescaling:__choice__": "standardize", "classifier:k_nearest_neighbors:n_neighbors": 1, "classifier:k_nearest_neighbors:p": 2, "classifier:k_nearest_neighbors:weights": "uniform"}, "9": {"balancing:strategy": "weighting", "categorical_encoding:__choice__": "one_hot_encoding", "classifier:__choice__": "k_nearest_neighbors", "imputation:strategy": "most_frequent", "preprocessor:__choice__": "select_rates", "rescaling:__choice__": "standardize", "categorical_encoding:one_hot_encoding:use_minimum_fraction": "True", "classifier:k_nearest_neighbors:n_neighbors": 1, "classifier:k_nearest_neighbors:p": 2, "classifier:k_nearest_neighbors:weights": "uniform", "preprocessor:select_rates:alpha": 0.0903354518102121, "preprocessor:select_rates:mode": "fwe", "preprocessor:select_rates:score_func": "f_classif", "categorical_encoding:one_hot_encoding:minimum_fraction": 0.001279467383882126}, "10": {"balancing:strategy": "none", "categorical_encoding:__choice__": "no_encoding", "classifier:__choice__": "libsvm_svc", "imputation:strategy": "mean", "preprocessor:__choice__": "no_preprocessing", "rescaling:__choice__": "none", "classifier:libsvm_svc:C": 13754.016206249817, "classifier:libsvm_svc:gamma": 0.0004259889287491207, "classifier:libsvm_svc:kernel": "rbf", "classifier:libsvm_svc:max_iter": -1, "classifier:libsvm_svc:shrinking": "True", "classifier:libsvm_svc:tol": 0.0009248390679349784}, "11": {"balancing:strategy": "weighting", "categorical_encoding:__choice__": "no_encoding", "classifier:__choice__": "sgd", "imputation:strategy": "most_frequent", "preprocessor:__choice__": "kitchen_sinks", "rescaling:__choice__": "none", "classifier:sgd:alpha": 0.05058020827484189, "classifier:sgd:average": "False", "classifier:sgd:eta0": 0.01641206069332072, "classifier:sgd:fit_intercept": "True", "classifier:sgd:learning_rate": "invscaling", "classifier:sgd:loss": "squared_hinge", "classifier:sgd:penalty": "elasticnet", "classifier:sgd:tol": 0.029914284599522816, "preprocessor:kitchen_sinks:gamma": 0.5211970398459226, "preprocessor:kitchen_sinks:n_components": 511, "classifier:sgd:l1_ratio": 0.4335565499503689, "classifier:sgd:power_t": 0.9714866787454979}, "12": {"balancing:strategy": "none", "categorical_encoding:__choice__": "no_encoding", "classifier:__choice__": "random_forest", "imputation:strategy": "median", "preprocessor:__choice__": "liblinear_svc_preprocessor", "rescaling:__choice__": "minmax", "classifier:random_forest:bootstrap": "False", "classifier:random_forest:criterion": "gini", "classifier:random_forest:max_depth": "None", "classifier:random_forest:max_features": 0.20830005302242705, "classifier:random_forest:max_leaf_nodes": "None", "classifier:random_forest:min_impurity_decrease": 0.0, "classifier:random_forest:min_samples_leaf": 4, "classifier:random_forest:min_samples_split": 18, "classifier:random_forest:min_weight_fraction_leaf": 0.0, "classifier:random_forest:n_estimators": 100, "preprocessor:liblinear_svc_preprocessor:C": 14857.932843775969, "preprocessor:liblinear_svc_preprocessor:dual": "False", "preprocessor:liblinear_svc_preprocessor:fit_intercept": "True", "preprocessor:liblinear_svc_preprocessor:intercept_scaling": 1, "preprocessor:liblinear_svc_preprocessor:loss": "squared_hinge", "preprocessor:liblinear_svc_preprocessor:multi_class": "ovr", "preprocessor:liblinear_svc_preprocessor:penalty": "l1", "preprocessor:liblinear_svc_preprocessor:tol": 0.008525613092320382}, "13": {"balancing:strategy": "weighting", "categorical_encoding:__choice__": "one_hot_encoding", "classifier:__choice__": "decision_tree", "imputation:strategy": "most_frequent", "preprocessor:__choice__": "pca", "rescaling:__choice__": "robust_scaler", "categorical_encoding:one_hot_encoding:use_minimum_fraction": "True", "classifier:decision_tree:criterion": "gini", "classifier:decision_tree:max_depth": 1.1988342838301962, "classifier:decision_tree:max_features": 1.0, "classifier:decision_tree:max_leaf_nodes": "None", "classifier:decision_tree:min_impurity_decrease": 0.0, "classifier:decision_tree:min_samples_leaf": 16, "classifier:decision_tree:min_samples_split": 20, "classifier:decision_tree:min_weight_fraction_leaf": 0.0, "preprocessor:pca:keep_variance": 0.5952967564115146, "preprocessor:pca:whiten": "False", "rescaling:robust_scaler:q_max": 0.824203019176545, "rescaling:robust_scaler:q_min": 0.044942636420149694, "categorical_encoding:one_hot_encoding:minimum_fraction": 0.0015510597845334515}}}